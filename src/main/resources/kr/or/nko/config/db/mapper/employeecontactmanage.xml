<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="employeecontact">
	<select id="employeecontactPagingList" resultType="EmployeeContactManageVo"
		parameterType="Map">

		select *
		from
		(select a.* ,rownum rn
		from
		(select d.*,c.*
		from employee d,department c
		where d.emp_dpt = c.dpt_sq
		and
		d.emp_flag = 'n'
		order by emp_sq)
		a ) a

		where rn between (#{page}-1) *
		#{pageSize}+1 and
		#{page}*#{pageSize}



	</select>

	<select id="employeecontactListCnt" resultType="integer"
		parameterType="int">
		select count(*)
		from employee
		where
		emp_flag = 'n'
		<!-- where ntc_div=#{ntc_div} -->
	</select>
	<select id="employeecontactAllList" resultType="EmployeeContactManageVo">
		select *
		from
		employee
	</select>
	<!-- <selectKey keyProperty="ntc_sq" resultType="String" order="BEFORE"> -->
	<!-- select employee_seq.nextval from dual -->
	<!-- </selectKey> -->

	<select id="selectemployeecontact" resultType="EmployeeContactManageVo"
		parameterType="EmployeeContactManageVo">
		select d.*,c.*
		from employee d,department c
		where
		d.emp_dpt = c.dpt_sq
		and emp_sq = #{emp_sq}
	</select>

	<delete id="deleteemployeecontact" parameterType="EmployeeContactManageVo">
		delete from
		employee where
		emp_sq=#{emp_sq}
	</delete>
	<update id="updateemployeecontact" parameterType="EmployeeContactManageVo">
		update employee
		set
		<!-- ntc_nm=nvl(#{ntc_nm},ntc_nm), -->
		<!-- ntc_con=nvl(#{ntc_con},ntc_con), -->
		emp_com_phone=nvl(#{emp_com_phone,jdbcType=VARCHAR},emp_com_phone),
		emp_phone=nvl(#{emp_phone,jdbcType=VARCHAR},emp_phone),
		emp_psn_email=nvl(#{emp_psn_email,jdbcType=VARCHAR},emp_psn_email)

		where
		emp_sq=#{emp_sq}
	</update>
	<update id="updateHits" parameterType="int">
		update employee
		set
		ntc_hits
		= ntc_hits + 1
		where ntc_sq = #{ntc_sq}
	</update>

	<select id="SerchEmployeecontactList" resultType="EmployeeContactManageVo"
		parameterType="Map">
		select *
		from
		(select a.*, rownum rn
		from (select d.*,c.*
		from employee
		d,department c
		<!-- select * from employee where or emp_sq like '%' || #{emp_sq} || '%' 
			이런식으로 될경우 문법엔 맞지 않지만 mybatis에서 자동으로 삭제해줌 -->
		<where>
			d.emp_dpt = c.dpt_sq
			<if test="emp_nm != null and emp_nm != ''">
				and
				d.emp_flag = 'n'
				and
				emp_nm like '%' || #{emp_nm } || '%'
			</if>
			<if test="emp_sq != null and emp_sq != 0">
				and	d.emp_flag = 'n'
				and emp_sq = #{emp_sq }
				
				

				<!-- or ntc_nm||ntc_emp_sq like '%'부서명으로 부서번호를 먼저 조회후 조회되어 부서번호로 조회하기때문에 
					like를 쓰지않음 -->
			</if>
		</where>
		order by emp_sq) a) a
		where rn between (#{page} - 1) * #{pageSize}
		+ 1
		and #{page} * #{pageSize}

	</select>
	<select id="EmployeeContactManageSerchCnt" resultType="Integer"
		parameterType="EmployeeContactManageVo">
		select count(*)
		from employee

		<where>
			<if test="emp_nm != null and emp_nm != ''">
				or emp_nm like '%' || #{emp_nm } || '%'
				and
				emp_flag = 'n'
			</if>
			<if test="emp_sq != null and emp_sq != 0">
				or emp_sq = #{emp_sq }
				and
				emp_flag = 'n'

				<!-- or ntc_nm||ntc_emp_sq like '%'부서명으로 부서번호를 먼저 조회후 조회되어 부서번호로 조회하기때문에 
					like를 쓰지않음 -->
			</if>
		</where>

	</select>

</mapper>